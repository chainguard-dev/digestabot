# Copyright 2023 Chainguard, Inc.
# SPDX-License-Identifier: Apache-2.0

name: Test

on:
  pull_request:
    branches:
      - 'main'

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run Digestabot
        uses: ./
        id: digestabot
        with:
          create-pr: false

      - name: Check changes
        run: |
          if [[ $(git diff --stat) == '' ]]; then
            echo 'should exist changes'
            exit 1
          else
            exit 0
          fi
        shell: bash

      - name: Check json output
        shell: bash
        run: |
          checks=(
            '.updates[] | .file and .file != ""'
            '.updates[] | .image and .image != ""'
            '.updates[].digest | startswith("sha256:")'
            '.updates[].updated_digest | startswith("sha256:")'
            '.updates[] | .digest != .updated_digest'
          )
          for check in "${checks[@]}"; do
            jq -e "${check}" <<<'${{ steps.digestabot.outputs.json }}'
          done

      - name: Check for makefile change with blank spaces/tabs
        shell: bash
        run: |
          if git diff --quiet HEAD -- testfiles/Makefile; then
              echo "testfiles/Makefile has not changed."
              exit 1
          fi

  test-working-dir:
    runs-on: ubuntu-latest

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          egress-policy: audit

      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Run Digestabot
        uses: ./
        with:
          create-pr: false
          working-dir: './testfiles/test-dir'

      - name: Check changes
        shell: bash
        run: |
          file_to_check='testfiles/test-dir/k8s-job-2.yaml'
          modified_files=$(git diff --name-only && git diff --cached --name-only)

          # Remove any duplicate entries from the list of modified files
          modified_files=$(echo "$modified_files" | sort | uniq)

          # Check if only the specified file is in the list of modified files
          if [ "$modified_files" == "$file_to_check" ]; then
              echo "Only $file_to_check has been modified"
              exit 0
          else
              echo "Other files have been modified or there are no changes"
              exit 1
          fi
